package com.pop136.customerservice.controller.customer;

import com.alibaba.fastjson.JSONObject;
import com.pop136.core.BeanUtil;
import com.pop136.customerservice.controller.BaseApiAction;
import com.pop136.customerservice.entity.customer.Contact;
import com.pop136.customerservice.service.common.CustomerTagService;
import com.pop136.customerservice.service.common.DataDictService;
import com.pop136.customerservice.service.customer.*;
import com.pop136.customerservice.utils.BusinessException;
import com.pop136.customerservice.utils.JsonParseUtil;
import com.pop136.customerservice.vo.customer.param.ContactParamVo;
import com.pop136.customerservice.vo.customer.param.ContactoAllParamVo;
import com.pop136.customerservice.vo.customer.search.ContactSearchVo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.util.*;

/**
 * 联系人controller
 */
@RestController
@RequestMapping("/contact")
public class ContactController extends BaseApiAction {

  @Autowired
  private CustomerService customerService;

  @Autowired
  private DataDictService dataDictService;

  @Autowired
  private ContactService contactService;

  @Autowired
  private UserRoleService roleService;

  @Autowired
  private UserService userService;

  @Autowired
  private FeedBackService feedBackService;

  @Autowired
  private CustomerTagService tagService;

  @Autowired
  private ContactServeService contactServeService;

  @Autowired
  private ContactServeProductService contactServeProductService;


  /**
   * 根据条件 获取联系人 列表
   */
  @RequestMapping(value = "/list",
      produces = MediaType.APPLICATION_JSON_UTF8_VALUE,
      consumes = MediaType.APPLICATION_JSON_UTF8_VALUE,
      method = RequestMethod.POST)
  @ResponseBody
  public String list(HttpServletRequest request, @RequestBody ContactSearchVo searchVo) {

    List<Object> result =  contactService.getContactList(searchVo);

    return success(result, convertPage(result,contactService.getContactCount(searchVo) ) );
  }


  /**
   * 根据id 获取 客户联系人详细
   */
  @RequestMapping(value = "/info",
          produces = MediaType.APPLICATION_JSON_UTF8_VALUE,
          consumes = MediaType.APPLICATION_JSON_UTF8_VALUE,
          method = RequestMethod.POST)
  @ResponseBody
  public String info(HttpServletRequest request, @RequestBody JSONObject jsonObject) {

    String contactId = JsonParseUtil.parseRequiredStringValue(jsonObject, "id");

    //获取 联系人基本信息
    Contact contact = contactService.findBy("id", contactId, Contact.class);

    if (contact == null) {
      throw  new BusinessException("该联系人不存在");
    }

    Map<String, Object> result =  contactService.getContactInfo(contact);

    return success(result);

  }


  /**
   * 修改/新增 联系人
   * @param request
   * @return
   */
  @RequestMapping(value = "/update",
      produces = MediaType.APPLICATION_JSON_UTF8_VALUE,
      consumes = MediaType.APPLICATION_JSON_UTF8_VALUE,
      method = RequestMethod.POST)
  @ResponseBody
  @Transactional
  public String update(HttpServletRequest request, @RequestBody ContactoAllParamVo paramVo) {

    Map<String, Object> result = new HashMap<>();
    Contact contact = new Contact();

    ContactParamVo contactParam = paramVo.getContactParam();

    BeanUtil.checkRequestParam(contactParam);//过滤
    if (contactParam != null) {
      //更新 联系人 操作
      if (paramVo.getId() != null && !paramVo.getId().equals("")) {
        contactParam.setId(paramVo.getId());//添加 id
        contactService.convertContactParam(contactParam, contact);
        contactService.update("id", contactParam.getId(), contact);

        result.put("contactId", contactParam.getId());
      }else{
        //新增
        contactService.convertContactParam(contactParam, contact);
        contactService.create(contact, Contact.class);
        paramVo.setId(contact.getId());//传递 联系人id

        result.put("contactId", contact.getId());
      }

    }

    contactService.updateContactTag(paramVo);
    contactService.updateContactServer(paramVo);


    return success(result);

  }



}
